# iOS 14.0 이상 지원 (Xcode 16.3 권장)
platform :ios, '14.0'

# CocoaPods 통계 기능 비활성화 = Flutter 빌드 시간 단축
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Firebase SDK 버전 고정 (Xcode 16 호환성)
$FirebaseSDKVersion = '10.18.0'

# 각 빌드 모드별 구성
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Flutter 루트 경로 설정: Generated.xcconfig 파일을 통해 FLUTTER_ROOT 환경 변수 읽어옴
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  # Generated.xcconfig 파일이 존재하지 않으면 오류 발생 (flutter pub get 실행 필요)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  # Generated.xcconfig 파일에서 FLUTTER_ROOT 환경 변수 추출
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

# flutter_tools 패키지의 podhelper 스크립트 호출
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # 프레임워크 사용 활성화
  use_frameworks!
  # 모듈화 헤더 사용 활성화
  use_modular_headers!
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# CocoaPods가 모든 의존성 설치를 완료한 후 실행되는 훅
post_install do |installer|
  # 프로젝트 내 설치된 모든 pod(라이브러리)를 타겟으로 하여 반복함
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # iOS 배포 타겟 설정
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'

      # ========== Xcode 16.3 기본 호환성 설정 ==========
      # 전역 빌드 설정
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
      config.build_settings['VALIDATE_WORKSPACE'] = 'NO'
      
      # C++ 표준 라이브러리 설정
      config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
      config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      
      # 경고를 오류로 취급하지 않도록 설정
      config.build_settings['GCC_TREAT_WARNINGS_AS_ERRORS'] = 'NO'
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['CLANG_WARN_DOCUMENTATION_COMMENTS'] = 'NO'

      # ========== Swift/Objective-C 브리징 전역 설정 ==========
      # Swift 모듈 인터페이스 비활성화 (Xcode 16 충돌 방지)
      config.build_settings['SWIFT_EMIT_MODULE_INTERFACE'] = 'NO'
      config.build_settings['SWIFT_ENABLE_BATCH_MODE'] = 'NO'
      
      # ========== 코드 서명 설정 ==========
      # 프레임워크 타입 제품에 대하여 코드 서명 비활성화
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.framework"
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
        config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ''
      end

      # ========== 권한 설정 ==========
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1',           # 카메라 권한 활성화
        'PERMISSION_PHOTOS=1',           # 사진 권한 활성화
        'PERMISSION_PHOTOS_ADD_ONLY=1',  # 사진 추가 권한 활성화
        'PERMISSION_LOCATION=1',         # 위치 권한 활성화 (geolocator용)
      ]
      
      # ========== Firebase 관련 특별 처리 ==========
      firebase_targets = ['FirebaseCore', 'FirebaseAuth', 'FirebaseFirestore', 'FirebaseStorage', 'FirebaseAppCheck']
      
      if firebase_targets.any? { |name| target.name.include?(name) }
        # Firebase는 모듈 시스템 필수이므로 활성화 유지
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        
        # 하지만 Swift 브리징 헤더는 비워둠
        config.build_settings['SWIFT_OBJC_BRIDGING_HEADER'] = ''
        config.build_settings['SWIFT_OBJC_INTERFACE_HEADER_NAME'] = ''
        
        # Firebase 특화 설정
        config.build_settings['VALIDATE_PRODUCT'] = 'NO'
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
        
        puts "Applied Firebase-compatible settings to #{target.name}"
      end
      
      # ========== 문제가 있는 C++ 라이브러리 처리 ==========
      # Firebase 관련이 아닌 C++ 라이브러리들만 모듈 비활성화
      problematic_cpp_targets = ['abseil', 'gRPC-Core', 'BoringSSL-GRPC', 'gRPC-C++', 'leveldb-library', 'nanopb', 'Protobuf-C++']
      
      if problematic_cpp_targets.any? { |name| target.name.include?(name) } && !firebase_targets.any? { |name| target.name.include?(name) }
        # 이러한 라이브러리들은 모듈화 비활성화
        config.build_settings['DEFINES_MODULE'] = 'NO'
        config.build_settings['CLANG_ENABLE_MODULES'] = 'NO'
        config.build_settings['SWIFT_EMIT_MODULE_INTERFACE'] = 'NO'
        
        # 헤더 검색 경로 최적화
        config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
        config.build_settings['USER_HEADER_SEARCH_PATHS'] ||= '$(inherited)'
        
        puts "Applied C++ library settings to #{target.name}"
      end
      
      # ========== flutter_secure_storage 특별 처리 ==========
      if target.name == 'flutter_secure_storage'
        # Swift 브리징 헤더 문제 해결을 위한 설정
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['SWIFT_OBJC_INTERFACE_HEADER_NAME'] = 'flutter_secure_storage-Swift.h'
        config.build_settings['SWIFT_INSTALL_OBJC_HEADER'] = 'YES'
        config.build_settings['SWIFT_OBJC_BRIDGING_HEADER'] = ''
        
        puts "Applied Swift bridging settings to flutter_secure_storage"
      end
      
      # ========== 시뮬레이터 아키텍처 설정 ==========
      # M1/M2 Mac의 iOS 시뮬레이터 호환성 (필요시 활성화)
      # config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
  
  # ========== 프로젝트 레벨 설정 ==========
  installer.pods_project.build_configurations.each do |config|
    # 전체 프로젝트에 Xcode 16 호환성 적용
    config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
    config.build_settings['VALIDATE_WORKSPACE'] = 'NO'
  end
  
  puts "✅ Xcode 16.3 + Firebase 호환성 설정이 적용되었습니다."
  puts "📱 iOS 14.0+ 타겟으로 설정되었습니다."
  puts "🔥 Firebase 모듈 시스템이 활성화되었습니다."
end